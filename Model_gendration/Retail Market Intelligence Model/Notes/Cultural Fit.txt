Overview

    This Python tool analyzes the cultural fit of a business type in a specific geographical location by:

        1. Reverse geocoding coordinates to determine the location

        2. Gathering local content from Wikipedia and other sources

        3. Analyzing the content for relevant keywords and sentiment

        4. Calculating a cultural fit score with seasonal and regional adjustments

Package Dependencies and Their Uses

    1. requests
        Purpose: HTTP requests to APIs
        Usage:
        Querying Nominatim (OpenStreetMap) for reverse geocoding
        Fetching data from Wikipedia API

    2. numpy
        Purpose: Numerical computing
        Usage: Mathematical operations and data processing (though not explicitly used in current code)

    3. datetime
        Purpose: Date and time manipulation
        Usage: Determining current season for seasonal adjustments

    4. collections
        Purpose: Specialized container datatypes
        Usage: defaultdict for efficient sentiment tracking

    5. time
        Purpose: Time-related functions
        Usage: Implementing rate limiting between API requests

    6. math
        Purpose: Mathematical functions
        Usage: Basic math operations (though not explicitly used in current code)
        
Class Structure and Functionality

    FreeCulturalFitAnalyzer Class

        1. Keyword Database

            self.keywords = {
            "coffee": ["coffee", "espresso", "latte", ...],
            "tea": ["tea", "chai", "green tea", ...],
            # ... 12 categories total
            }

            Comprehensive keyword mapping for different business categories

        2. Seasonal Patterns

            self.seasonal_patterns = {
                "northern_hemisphere": {
                    "summer": [6, 7, 8],
                    "winter": [12, 1, 2],
                    # ...
                },
                # ...
            }

            Defines seasonal patterns for both hemispheres


Key Methods:

    a. Location Processing

        get_hemisphere(): Determines hemisphere based on latitude
        get_location_from_coords(): Reverse geocoding using Nominatim API

    b. Content Gathering

        get_wikipedia_content(): Fetches relevant Wikipedia content
        get_local_content(): Aggregates content from multiple sources
        generate_simulated_local_data(): Creates simulated data when APIs fail

    c. Analysis & Scoring

        analyze_text_for_keywords(): Analyzes content for relevant keywords
        calculate_cultural_fit(): Computes the cultural fit score
        apply_seasonal_adjustments(): Adjusts score based on current season
        apply_regional_adjustments(): Adjusts score based on regional preferences

    d. Main Function

        get_cultural_fit_score(): Primary method that orchestrates the entire analysis


How It Works - Step by Step

    1. Input Processing: Takes coordinates, business type, and analysis radius

    2. Reverse Geocoding: Converts coordinates to location details using Nominatim

    3. Content Collection: Gathers local information from Wikipedia and generates simulated data

    4. Keyword Analysis: Processes content to identify relevant business keywords

    5. Sentiment Analysis: Assesses positive/negative sentiment in the content

    6. Score Calculation: Computes cultural fit score with multiple adjustments

    7. Insight Generation: Creates human-readable insights from the analysis

Summary: How to Collect Data to Get Above 90%

1. Google Places API :-	Competitor count, average ratings, review text, price levels.	(Provides direct, real-world signals of demand, quality, and saturation  This is the #1 factor.)	CRITICAL

2. Manual Benchmarking :- 	A list of real businesses with known outcomes (success/failure).  (Creates a "report card" to measure and improve your algorithm's performance. Allows you to tune weights ).	HIGH

3. Foursquare / Yelp APIs :-	Additional venue details, categories, and reviews.	(Provides redundancy and enriches data, especially if one API is missing information.) MEDIUM

4 OpenStreetMap API	:- Raw density of specific amenity types.	(Good free source for basic density checks without strict rate limits.)	LOW
